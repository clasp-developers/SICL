This module is organized into three sub-modules:

  * The "Fast" sub-module containing code for a fast version of the
    sequence functions.  This code contains a lot of specialization,
    so the resulting compiled code may be big.  Not all
    implementations can handle that.  Furthermore, it order to obtain
    good performance, the compiler of the implementation needs to be
    sufficiently smart.

  * The "Small" sub-module containing code for a fairly
    straightforward implementation of the sequence functions.  No
    particular attempt has been made to make the implementation fast.

  * The "Tiny" sub-module containing code that has been optimized for
    space rather than speed.  It is suitable for implementations
    destined to run as embedded software in small devices.

Each sub-module has three ASDF system definitions associated with it:

  * sicl-sequence-<module-name>-support.  This system definition can
    be build on any conforming Common Lisp implementation.  It does
    not define functions corresponding to the names of the sequence
    functions themselves (only support functions called by the
    sequence functions).

  * sicl-sequence-<module-name>.  This system defines a package that
    uses the COMMON-LISP package and it defines the sequence functions
    themselves.  These systems can not usually be built on a Common
    Lisp implementation.  Even if package locks are circumvented,
    other things are likely to break in the implementation.

  * sicl-sequence-<module-name>-test.  This system is like the system
    sicl-sequence-<module-name>, except that it defines a package that
    shadows the names of the sequence functions are shadowed, so that
    these functions can be called normally for testing purposes.

Some of the code for the different sub-modules is the same.  Such code
is located in the Common sub-directory.
